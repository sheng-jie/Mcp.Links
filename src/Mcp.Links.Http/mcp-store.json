[
  {
    "Title": "EdgeOne Pages MCP",
    "ImageUrl": "https://avatars.githubusercontent.com/u/176978739?v=4",
    "Author": "@TencentEdgeOne",
    "Address": "https://github.com/TencentEdgeOne/edgeone-pages-mcp",
    "Profile": "An MCP service designed for deploying HTML content to EdgeOne Pages and obtaining an accessible public URL.",
    "Overview": "## What is EdgeOne Pages MCP?\n\nEdgeOne Pages MCP is a service designed for deploying HTML content to EdgeOne Pages, allowing users to obtain a publicly accessible URL for their content.\n\n## How to use EdgeOne Pages MCP?\n\nTo use EdgeOne Pages MCP, provide your HTML content to the MCP service, and it will deploy the content, returning a public URL that can be accessed immediately.\n\n## Key features of EdgeOne Pages MCP?\n\n- Rapid deployment of HTML content using the MCP protocol\n- Automatic generation of publicly accessible URLs for deployed content\n\n## Use cases of EdgeOne Pages MCP?\n\n- Deploying static HTML websites quickly\n- Sharing HTML content with a public URL for easy access\n- Integrating with EdgeOne Pages Functions for serverless applications\n\n## FAQ from EdgeOne Pages MCP?\n\n**What is the MCP protocol?**\n\nThe MCP protocol is a method for quickly deploying content to EdgeOne Pages, ensuring fast access and delivery.\n\n**Is there a limit to the HTML content I can deploy?**\n\nThere may be limitations based on the EdgeOne Pages service policies, so it's best to refer to the documentation for specifics.\n\n**How do I access the deployed content?**\n\nAfter deployment, the service will provide a public URL that can be accessed via a web browser.",
    "Config": "{\n  \"mcpServers\": {\n    \"edgeone-pages-mcp-server\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"edgeone-pages-mcp\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Time",
    "ImageUrl": "https://r2.trys.ai/imgs/1htutybr5-1742188467049.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/time",
    "Profile": "A Model Context Protocol server that provides time and timezone conversion capabilities. This server enables LLMs to get current time information and perform timezone conversions using IANA timezone names, with automatic system timezone detection.",
    "Overview": "## What is Time MCP Server?\n\nTime MCP Server is a Model Context Protocol server that provides time and timezone conversion capabilities. It enables LLMs to get current time information and perform timezone conversions using IANA timezone names, with automatic system timezone detection.\n\n## How to use Time MCP Server?\n\nTo use Time MCP Server, you can install it via pip or use uvx for direct execution. After installation, configure it in your Claude or Zed settings. The server provides tools like get_current_time and convert_time to fetch current time in a specific timezone and convert time between timezones, respectively.\n\n## Key features of Time MCP Server?\n\n- Provides current time information in any IANA timezone\n- Converts time between different timezones\n- Automatic system timezone detection with the option to override\n- Easy integration with Claude and Zed through configuration settings\n\n## Use cases of Time MCP Server?\n\n- Getting the current time in a specific timezone\n- Converting time between different timezones for scheduling and coordination\n- Automating time-related queries in applications and services\n\n## FAQ from Time MCP Server?\n\n**Can Time MCP Server handle all IANA timezones?**\n\nYes, Time MCP Server supports all IANA timezones for time and timezone conversion.\n\n**Is Time MCP Server free to use?**\n\nYes, Time MCP Server is open-source and free to use under the MIT License.\n\n**How accurate is the time provided by Time MCP Server?**\n\nThe time provided by Time MCP Server is highly accurate, relying on system time and IANA timezone data for precision.",
    "Config": "{\n  \"mcpServers\": {\n    \"time\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-server-time\",\n        \"--local-timezone=America/New_York\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Zhipu Web Search",
    "ImageUrl": "https://cdn.bigmodel.cn/static/platform/images/logo/bigmodel-pure-logo.png",
    "Author": "@BigModel",
    "Address": "https://github.com/THUDM",
    "Profile": "Zhipu Web Search MCP Server is a search engine specifically designed for large models. It integrates four search engines, allowing users to flexibly compare and switch between them. Building upon the web crawling and ranking capabilities of traditional search engines, it enhances intent recognition capabilities, returning results more suitable for large model processing (such as webpage titles, URLs, summaries, site names, site icons, etc.). This helps AI applications achieve \"dynamic knowledge acquisition\" and \"precise scenario adaptation\" capabilities.",
    "Overview": "## What is Zhipu Web Search?\n\nZhipu Web Search is a specialized search engine designed for large models, integrating four different search engines to allow users to compare and switch between them flexibly. It enhances traditional web crawling and ranking capabilities with improved intent recognition, providing results tailored for large model processing.\n\n## How to use Zhipu Web Search?\n\nTo use Zhipu Web Search, obtain an API Key from the Zhipu BigModel Open Platform and configure it in a compatible client like Cursor. The MCP service can be integrated through simple configuration in the client settings.\n\n## Key features of Zhipu Web Search?\n\n- Integration of multiple search engines for flexible comparisons\n- Enhanced intent recognition for better result relevance\n- Support for large model processing with tailored results including titles, URLs, summaries, and site icons\n\n## Use cases of Zhipu Web Search?\n\n- AI applications requiring dynamic knowledge acquisition\n- Scenarios needing precise adaptation of search results\n- Research and data analysis leveraging large model capabilities\n\n## FAQ from Zhipu Web Search?\n\n**What types of search engines does Zhipu Web Search integrate?**\n\nIt integrates several search engines including Zhipu proprietary engines standard and Zhipu proprietary engines advanced versions, as well as Sogou、Jina and Quark search engines.\n\n**How do I obtain an API Key?**\n\nYou can obtain an API Key from the Zhipu BigModel Open Platform.\n\n**Can I use Zhipu Web Search with any client?**\n\nIt supports clients that run the MCP protocol, such as Cursor and Cherry Studio.",
    "Config": "{\n  \"mcpServers\": {\n    \"zhipu-web-search-sse\": {\n      \"url\": \"https://open.bigmodel.cn/api/mcp/web_search/sse?Authorization={you ak/sk}\"\n    }\n  }\n}"
  },
  {
    "Title": "MCP Advisor",
    "ImageUrl": "https://avatars.githubusercontent.com/u/36853082?v=4",
    "Author": "@istarwyh",
    "Address": "https://github.com/istarwyh/mcpadvisor",
    "Profile": "MCP Advisor & Installation - Use the right MCP server for your needs",
    "Overview": "## What is MCP Advisor?\n\nMCP Advisor is a discovery and recommendation service designed to help users explore Model Context Protocol (MCP) servers. It acts as a smart guide for AI assistants, enabling them to find and understand available MCP services through natural language queries.\n\n## How to use MCP Advisor?\n\nTo use MCP Advisor, clone the repository or utilize npx. Configure your AI assistant to integrate with MCP Advisor by editing the appropriate configuration files based on your operating system.\n\n## Key features of MCP Advisor?\n\n- **Smart Search**: Allows users to find MCP services using natural language queries\n- **Rich Metadata**: Provides detailed information about each service\n- **Real-time Updates**: Ensures users have access to the latest MCP services\n- **Easy Integration**: Simple integration with any MCP-compatible AI assistant\n\n## Use cases of MCP Advisor?\n\n- Discovering MCP servers for natural language processing tasks\n- Finding MCP servers for financial data analysis\n- Identifying recommendation engine MCP servers for e-commerce applications\n- Locating MCP servers with image recognition capabilities\n\n## FAQ from MCP Advisor?\n\n**What is the purpose of MCP Advisor?**\n\nMCP Advisor helps users discover and utilize the right MCP services for their specific tasks through natural language queries.\n\n**Is MCP Advisor free to use?**\n\nYes! MCP Advisor is open-source and free to use.\n\n**How can I troubleshoot common issues?**\n\nCommon issues include connection problems, no results returned, and performance issues. Refer to the troubleshooting section in the documentation for solutions.",
    "Config": "{\n  \"mcpServers\": {\n    \"mcpadvisor\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@xiaohui-wang/mcpadvisor\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Howtocook Mcp",
    "ImageUrl": "https://weilei.site/images/howtocook/3.png",
    "Author": "@worryzyy",
    "Address": "https://github.com/worryzyy/HowToCook-mcp",
    "Profile": "基于Anduin2017 / HowToCook （程序员在家做饭指南）的mcp server，帮你推荐菜谱、规划膳食，解决“今天吃什么“的世纪难题；\nBased on Anduin2017/HowToCook (Programmer's Guide to Cooking at Home), MCP Server helps you recommend recipes, plan meals, and solve the century old problem of \"what to eat today\"\n",
    "Overview": " ",
    "Config": "{\n  \"mcpServers\": {\n    \"howtocook-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"howtocook-mcp\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Context7",
    "ImageUrl": "https://avatars.githubusercontent.com/u/74989412?v=4",
    "Author": "@upstash",
    "Address": "https://github.com/upstash/context7",
    "Profile": "Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors",
    "Overview": "## What is Context7?\n\nContext7 is a server that provides up-to-date documentation for large language models (LLMs) and AI code editors, ensuring that users have access to the latest information and code examples.\n\n## How to use Context7?\n\nTo use Context7, simply add use context7 to your question in compatible LLMs like Cursor. For example: How do I use the new Next.js 'after' function? use context7.\n\n## Key features of Context7?\n\n- Provides version-specific documentation and code examples directly in prompts\n- Eliminates outdated or generic information that LLMs typically rely on\n- Supports multiple installation methods across various platforms like Node.js, Cursor, and VSCode\n\n## Use cases of Context7?\n\n- Fetching up-to-date documentation for libraries in real-time\n- Enhancing coding efficiency by providing accurate code examples\n- Reducing errors caused by outdated API references in LLM responses\n\n## FAQ from Context7?\n\n**Can Context7 be used with any LLM?**\n\nYes! Context7 is designed to work with various LLMs that support the MCP protocol.\n\n**Is Context7 free to use?**\n\nYes! Context7 is open-source and free to use.\n\n**How does Context7 ensure the accuracy of its documentation?**\n\nContext7 pulls documentation directly from the source, ensuring that the information is current and relevant.",
    "Config": "{\n  \"mcpServers\": {\n    \"context7\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@upstash/context7-mcp\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "MiniMax MCP",
    "ImageUrl": "https://avatars.githubusercontent.com/u/194880281?v=4",
    "Author": "@MiniMax-AI",
    "Address": "https://github.com/MiniMax-AI/MiniMax-MCP",
    "Profile": "Official MiniMax Model Context Protocol (MCP) server that enables interaction with powerful Text to Speech, image generation and video generation APIs.",
    "Overview": "## What is MiniMax MCP?\n\nMiniMax MCP is an official server for the MiniMax Model Context Protocol that facilitates interaction with advanced Text to Speech and video/image generation APIs.\n\n## How to use MiniMax MCP?\n\nTo use MiniMax MCP, obtain your API key from MiniMax, install the required Python package manager uv, and configure your MCP client (like Claude Desktop or Cursor) to connect to the MiniMax server.\n\n## Key features of MiniMax MCP?\n\n- Enables Text to Speech capabilities\n- Supports video and image generation\n- Allows voice cloning\n- Integrates with various MCP clients like Claude Desktop and Cursor\n\n## Use cases of MiniMax MCP?\n\nBroadcasting segments of news with generated speech.\n\nCloning voices for personalized audio content.\n\nGenerating videos for educational or entertainment purposes.\n\nCreating images based on textual descriptions.\n\n## FAQ from MiniMax MCP?\n\n## What clients can use MiniMax MCP?\n\nMiniMax MCP can be used with clients like Claude Desktop, Cursor, and others that support MCP.\n\n## Is there a cost associated with using MiniMax MCP?\n\nYes, using these tools may incur costs depending on the API usage.\n\n## How do I configure my client to use MiniMax MCP?\n\nFollow the setup instructions provided in the documentation for your specific client.",
    "Config": "{\n  \"mcpServers\": {\n    \"MiniMax\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"minimax-mcp\"\n      ],\n      \"env\": {\n        \"MINIMAX_API_KEY\": \"<insert-your-api-key-here>\",\n        \"MINIMAX_MCP_BASE_PATH\": \"<local-output-dir-path>\",\n        \"MINIMAX_API_HOST\": \"https://api.minimaxi.chat\",\n        \"MINIMAX_API_RESOURCE_MODE\": \"<optional, [url|local], url is default, audio/image/video are downloaded locally or provided in URL format>\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Serper MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/3072379?v=4",
    "Author": "@garymengcom",
    "Address": "https://github.com/garymengcom/serper-mcp-server",
    "Profile": "A Serper MCP Server",
    "Overview": "## what is Serper MCP Server?\n\nSerper MCP Server is a Model Context Protocol server that provides Google Search via Serper, enabling LLMs to retrieve search result information from Google.\n\n## how to use Serper MCP Server?\n\nTo use the Serper MCP Server, you can install it using uv or pip, configure your MCP client to include the server, and set your Serper API key in the environment variables.\n\n## key features of Serper MCP Server?\n\nProvides Google Search results for LLMs.\n\nSupports multiple search parameters like location, language, and time period.\n\nEasy integration with MCP clients using uv or pip.\n\n## use cases of Serper MCP Server?\n\nEnabling LLMs to perform real-time searches on Google.\n\nIntegrating search capabilities into AI applications.\n\nAssisting in research by providing up-to-date information from Google.\n\n## FAQ from Serper MCP Server?\n\n## How do I install Serper MCP Server?\n\nYou can install it using uv or pip by following the instructions in the documentation.\n\n## What is required to use the server?\n\nYou need a valid Serper API key and an MCP client configured to use the server.\n\n## Is there any debugging tool available?\n\nYes, you can use the MCP inspector to debug the server.",
    "Config": "{\n  \"mcpServers\": {\n    \"serper\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"serper-mcp-server\"\n      ],\n      \"env\": {\n        \"SERPER_API_KEY\": \"<Your Serper API key>\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Jina AI MCP Tools",
    "ImageUrl": "https://avatars.githubusercontent.com/u/189519594?v=4",
    "Author": "@PsychArch",
    "Address": "https://github.com/PsychArch/jina-mcp-tools",
    "Profile": "A Model Context Protocol (MCP) server that integrates with Jina AI Search Foundation APIs.",
    "Overview": "## what is Jina AI MCP Tools?\n\nJina AI MCP Tools is a Model Context Protocol (MCP) server that integrates with Jina AI Search Foundation APIs, enabling users to access various AI-driven tools for web reading, searching, and fact-checking.\n\n## how to use Jina AI MCP Tools?\n\nTo use Jina AI MCP Tools, you need to set up a configuration file for Cursor and provide your Jina API key. Once configured, you can instruct Cursor to use the Jina tools for various tasks.\n\n## key features of Jina AI MCP Tools?\n\nWeb Reader: Extracts content from web pages.\n\nWeb Search: Searches the web for information.\n\nFact-Check: Verifies factual statements.\n\n## use cases of Jina AI MCP Tools?\n\nExtracting content from a specific webpage for analysis.\n\nSearching for information on complex topics like quantum computing.\n\nVerifying claims or statements for accuracy.\n\n## FAQ from Jina AI MCP Tools?\n\n## How do I get a Jina API key?\n\nYou can obtain a free API key from the Jina AI website.\n\n## What programming language is Jina AI MCP Tools built with?\n\nJina AI MCP Tools is built using JavaScript.\n\n## Is there a license for Jina AI MCP Tools?\n\nYes, it is licensed under the MIT license.",
    "Config": "{\n  \"mcpServers\": {\n    \"jina-mcp-tools\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"jina-mcp-tools\"\n      ],\n      \"env\": {\n        \"JINA_API_KEY\": \"your_jina_api_key_here\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Amap Maps",
    "ImageUrl": "https://r2.trys.ai/imgs/zbu4ptrd-1742910186713.png",
    "Author": "@amap",
    "Address": "https://github.com/modelcontextprotocol/servers",
    "Profile": "高德地图官方 MCP Server",
    "Overview": "## What is Amap Maps?\n\nAmap Maps is a server that supports any MCP protocol client, allowing users to easily utilize the Amap Maps MCP server for various location-based services.\n\n## How to use Amap Maps?\n\nTo use Amap Maps, configure it in a compatible client like Cursor by copying your API key and setting up the server command as specified in the documentation.\n\n## Key features of Amap Maps?\n\nSupports multiple location services including geocoding, weather, and distance measurement.\n\nProvides APIs for various transportation modes including walking, driving, and public transit.\n\nAllows for detailed searches of points of interest (POIs) based on keywords or location.\n\n## Use cases of Amap Maps?\n\nConverting geographic coordinates to administrative addresses.\n\nPlanning routes for cycling, walking, or driving.\n\nSearching for nearby points of interest based on user-defined criteria.\n\n## FAQ from Amap Maps?\n\n## What types of location services does Amap Maps provide?\n\nAmap Maps provides geocoding, weather information, distance measurement, and route planning for various transportation modes.\n\n## Is there a limit to the number of requests I can make?\n\nThe usage limits depend on the API key and the specific service being used. Please refer to the Amap documentation for details.\n\n## How do I obtain an API key?\n\nYou can obtain an API key by creating a project on the Amap developer platform.",
    "Config": "{\n  \"mcpServers\": {\n    \"amap-maps\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@amap/amap-maps-mcp-server\"\n      ],\n      \"env\": {\n        \"AMAP_MAPS_API_KEY\": \"api_key\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Playwright Mcp",
    "ImageUrl": "https://avatars.githubusercontent.com/u/6154722?v=4",
    "Author": "@microsoft",
    "Address": "https://github.com/microsoft/playwright-mcp",
    "Profile": "Playwright MCP server",
    "Overview": "## What is Playwright MCP?\n\nPlaywright MCP is a Model Context Protocol server that provides browser automation capabilities using Playwright. It allows large language models (LLMs) to interact with web pages through structured accessibility snapshots, eliminating the need for screenshots or visually-tuned models.\n\n## How to use Playwright MCP?\n\nTo use Playwright MCP, you can run it using the command npx @playwright/mcp@latest in your terminal. You can configure it to run in headless mode or with a display, depending on your needs.\n\n## Key features of Playwright MCP?\n\nFast and lightweight operation using Playwright’s accessibility tree.\n\nLLM-friendly, requiring no vision models and operating purely on structured data.\n\nDeterministic tool application, reducing ambiguity compared to screenshot-based methods.\n\n## Use cases of Playwright MCP?\n\nWeb navigation and form-filling.\n\nData extraction from structured content.\n\nAutomated testing driven by LLMs.\n\nGeneral-purpose browser interaction for agents.\n\n## FAQ from Playwright MCP?\n\n## Can Playwright MCP be used for all types of web automation?\n\nYes! Playwright MCP supports a wide range of web automation tasks including navigation, data extraction, and form submission.\n\n## Is Playwright MCP free to use?\n\nYes! Playwright MCP is open-source and free to use for everyone.\n\n## How does Playwright MCP handle accessibility?\n\nPlaywright MCP uses accessibility snapshots to interact with web pages, which improves performance and reliability.",
    "Config": "{\n  \"mcpServers\": {\n    \"playwright\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"@playwright/mcp@latest\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Baidu Map",
    "ImageUrl": "https://r2.trys.ai/imgs/2o0lb5g7r-1742872465843.png",
    "Author": "@baidu-maps",
    "Address": "https://github.com/baidu-maps/mcp",
    "Profile": "百度地图核心API现已全面兼容MCP协议，是国内首家兼容MCP协议的地图服务商。",
    "Overview": "## what is Baidu Map?\n\nBaidu Map is a core API service that is fully compatible with the MCP protocol, making it the first map service provider in China to support this protocol.\n\n## how to use Baidu Map?\n\nTo use Baidu Map, you need to create a server-side API key (AK) on the Baidu Map Open Platform and then integrate the API using either Python or Typescript SDKs.\n\n## key features of Baidu Map?\n\nProvides 8 core API interfaces including geocoding, reverse geocoding, place search, route planning, and weather queries.\n\nSupports integration with intelligent assistants that are compatible with the MCP protocol.\n\n## use cases of Baidu Map?\n\nGeocoding addresses to coordinates.\n\nRetrieving detailed information about places of interest (POIs).\n\nPlanning routes for driving, walking, or public transport.\n\nQuerying current weather based on location.\n\n## FAQ from Baidu Map?\n\n## What is the MCP protocol?\n\nThe MCP protocol is a standard for integrating various services and tools in a unified manner. More details can be found in the official MCP documentation.\n\n## Is there a cost to use Baidu Map API?\n\nThe usage of Baidu Map API may vary; please check the Baidu Map Open Platform for pricing details.\n\n## How can I troubleshoot issues with the API?\n\nYou can refer to the official documentation or community forums for troubleshooting tips.",
    "Config": "{\n  \"mcpServers\": {\n    \"baidu-map\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@baidumap/mcp-server-baidu-map\"\n      ],\n      \"env\": {\n        \"BAIDU_MAP_API_KEY\": \"xxx\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Blender",
    "ImageUrl": "https://avatars.githubusercontent.com/u/11807284?s=48&v=4",
    "Author": "@ahujasid",
    "Address": "https://github.com/ahujasid/blender-mcp",
    "Profile": "BlenderMCP connects Blender to Claude AI through the Model Context Protocol (MCP), allowing Claude to directly interact with and control Blender. This integration enables prompt assisted 3D modeling, scene creation, and manipulation.",
    "Overview": "## What is BlenderMCP?\n\nBlenderMCP is an integration that connects Blender to Claude AI through the Model Context Protocol (MCP), enabling prompt-assisted 3D modeling, scene creation, and manipulation.\n\n## How to use BlenderMCP?\n\nTo use BlenderMCP, install the addon in Blender, configure the MCP server, and connect to Claude AI to start creating and manipulating 3D models.\n\n## Key features of BlenderMCP?\n\nTwo-way communication between Claude AI and Blender.\n\nObject manipulation capabilities including creation, modification, and deletion of 3D objects.\n\nMaterial control for applying and modifying materials and colors.\n\nScene inspection to get detailed information about the current Blender scene.\n\nAbility to execute arbitrary Python code in Blender from Claude.\n\n## Use cases of BlenderMCP?\n\nCreating complex 3D scenes with AI assistance.\n\nModifying existing 3D models through natural language commands.\n\nGenerating 3D models based on user-defined parameters or images.\n\n## FAQ from BlenderMCP?\n\n## Can BlenderMCP work with any version of Blender?\n\nNo, BlenderMCP requires Blender 3.0 or newer.\n\n## Is there a limit to the number of models I can generate?\n\nYes, Hyper3D's free trial key allows a limited number of models per day.\n\n## What should I do if I encounter connection issues?\n\nEnsure the Blender addon server is running and the MCP server is configured correctly.",
    "Config": "{\n  \"mcpServers\": {\n    \"blender\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"blender-mcp\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Redis",
    "ImageUrl": "https://r2.trys.ai/imgs/ul08gchu-1742450813135.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/redis",
    "Profile": "A Model Context Protocol server that provides access to Redis databases. This server enables LLMs to interact with Redis key-value stores through a set of standardized tools.",
    "Overview": "## what is Redis?\n\nRedis is a Model Context Protocol server that provides access to Redis databases, enabling LLMs to interact with Redis key-value stores through standardized tools.\n\n## how to use Redis?\n\nTo use Redis, configure it in the \"mcpServers\" section of your claude_desktop_config.json or run it using Docker or NPX commands as specified in the documentation.\n\n## key features of Redis?\n\nSet, get, delete, and list operations for Redis key-value pairs.\n\nSupports optional expiration for keys.\n\nEasy integration with Claude Desktop and Docker.\n\n## use cases of Redis?\n\nStoring and retrieving user session data.\n\nCaching frequently accessed data for faster retrieval.\n\nManaging real-time data feeds in applications.\n\n## FAQ from Redis?\n\n## What is the default Redis URL?\n\nThe default Redis URL is \"redis://localhost:6379\".\n\n## Can I run Redis in a Docker container?\n\nYes! You can run Redis using Docker with the provided command.\n\n## Is Redis open source?\n\nYes! Redis is licensed under the MIT License, allowing free use, modification, and distribution.",
    "Config": "{\n  \"mcpServers\": {\n    \"redis\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"mcp/redis\",\n        \"redis://host.docker.internal:6379\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Aws Kb Retrieval Server",
    "ImageUrl": "https://r2.trys.ai/imgs/2vyqphp5g-1742442281770.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/aws-kb-retrieval-server",
    "Profile": "An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.",
    "Overview": "## what is AWS Knowledge Base Retrieval Server?\n\nThe AWS Knowledge Base Retrieval Server is an MCP server implementation designed to retrieve information from the AWS Knowledge Base using the Bedrock Agent Runtime.\n\n## how to use AWS Knowledge Base Retrieval Server?\n\nTo use the server, set up your AWS credentials and configure the server in your claude_desktop_config.json. You can run it using Docker or npx commands with the necessary environment variables for AWS access.\n\n## key features of AWS Knowledge Base Retrieval Server?\n\nRAG (Retrieval-Augmented Generation): Retrieve context from the AWS Knowledge Base based on a query and a Knowledge Base ID.\n\nSupports multiple results retrieval: Option to retrieve a customizable number of results.\n\n## use cases of AWS Knowledge Base Retrieval Server?\n\nRetrieving specific information from AWS documentation based on user queries.\n\nIntegrating with applications that require dynamic access to AWS Knowledge Base content.\n\nEnhancing customer support tools with quick access to AWS resources.\n\n## FAQ from AWS Knowledge Base Retrieval Server?\n\n## How do I set up AWS credentials?\n\nObtain your AWS access key ID, secret access key, and region from the AWS Management Console and ensure they have the necessary permissions.\n\n## Can I customize the number of results retrieved?\n\nYes! You can specify the number of results to retrieve when making a query.\n\n## Is there a license for this server?\n\nYes, the server is licensed under the MIT License, allowing you to use, modify, and distribute it.",
    "Config": "{\n  \"mcpServers\": {\n    \"aws-kb-retrieval\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-aws-kb-retrieval\"\n      ],\n      \"env\": {\n        \"AWS_ACCESS_KEY_ID\": \"YOUR_ACCESS_KEY_HERE\",\n        \"AWS_SECRET_ACCESS_KEY\": \"YOUR_SECRET_ACCESS_KEY_HERE\",\n        \"AWS_REGION\": \"YOUR_AWS_REGION_HERE\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Sequential Thinking",
    "ImageUrl": "https://r2.trys.ai/imgs/33zouerce-1741876955447.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/HEAD/src/sequentialthinking",
    "Profile": "An MCP server implementation that provides a tool for dynamic and reflective problem-solving through a structured thinking process.",
    "Overview": "## What is Sequential Thinking?\n\nSequential Thinking is an MCP server implementation that provides a tool for dynamic and reflective problem-solving through a structured thinking process.\n\n## How to use Sequential Thinking?\n\nTo use Sequential Thinking, integrate it with your project by configuring it in your claude_desktop_config.json or using Docker to run the server. You can input your current thought process and manage it step-by-step.\n\n## Key features of Sequential Thinking?\n\n- Break down complex problems into manageable steps\n- Revise and refine thoughts as understanding deepens\n- Branch into alternative paths of reasoning\n- Adjust the total number of thoughts dynamically\n- Generate and verify solution hypotheses\n\n## Use cases of Sequential Thinking?\n\n- Breaking down complex problems into steps for better clarity\n- Planning and design processes that require iterative revisions\n- Analyzing problems where the full scope is initially unclear\n- Tasks that need to maintain context over multiple steps\n- Filtering out irrelevant information during problem-solving\n\n## FAQ from Sequential Thinking?\n\n## Can Sequential Thinking handle all types of problems?\n\nYes! It is designed to assist with a wide range of complex problem-solving scenarios.\n\n## Is Sequential Thinking free to use?\n\nYes! It is open-source and licensed under the MIT License, allowing free use and modification.\n\n## How does Sequential Thinking manage revisions?\n\nIt allows users to revise previous thoughts and adjust their reasoning dynamically.",
    "Config": "{\n  \"mcpServers\": {\n    \"sequential-thinking\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-sequential-thinking\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Perplexity Ask MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/110299016?v=4",
    "Author": "@ppl-ai",
    "Address": "https://github.com/ppl-ai/modelcontextprotocol",
    "Profile": "A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.",
    "Overview": "## what is Perplexity Ask MCP Server?\n\nPerplexity Ask MCP Server is a Model Context Protocol Server connector for the Perplexity API, enabling web search capabilities within the MCP ecosystem.\n\n## how to use Perplexity Ask MCP Server?\n\nTo use the server, clone the MCP repository, install dependencies, obtain a Sonar API key, configure the Claude desktop, build the Docker image, and test the integration.\n\n## key features of Perplexity Ask MCP Server?\n\nReal-time web search integration with the Sonar API.\n\nEasy configuration and setup for users.\n\nSupport for advanced search parameters.\n\n## use cases of Perplexity Ask MCP Server?\n\nConducting live web searches without leaving the MCP environment.\n\nEnhancing research capabilities for users of the Claude desktop.\n\nIntegrating web search functionalities into applications using the Perplexity API.\n\n## FAQ from Perplexity Ask MCP Server?\n\n## How do I get a Sonar API key?\n\nSign up for a Sonar API account and generate your API key from the developer dashboard.\n\n## Is there a troubleshooting guide available?\n\nYes, the Claude documentation provides a troubleshooting guide for common issues.\n\n## What license is the MCP server under?\n\nThe MCP server is licensed under the MIT License, allowing free use, modification, and distribution.",
    "Config": "{\n  \"mcpServers\": {\n    \"perplexity-ask\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@chatmcp/server-perplexity-ask\"\n      ],\n      \"env\": {\n        \"PERPLEXITY_API_KEY\": \"YOUR_API_KEY_HERE\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "AgentQL MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/119996419?v=4",
    "Author": "@tinyfish-io",
    "Address": "https://github.com/tinyfish-io/agentql-mcp",
    "Profile": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
    "Overview": "## What is AgentQL MCP Server?\n\nAgentQL MCP Server is a Model Context Protocol (MCP) server that integrates AgentQL's data extraction capabilities, allowing users to extract structured data from web pages.\n\n## How to use AgentQL MCP Server?\n\nTo use the AgentQL MCP Server, install the package via npm, configure it with your preferred application (like Claude, Cursor, or Windsurf), and provide the necessary API key for data extraction.\n\n## Key features of AgentQL MCP Server?\n\nExtract structured data from web pages using customizable prompts.\n\nIntegration with various applications like Claude, Cursor, and Windsurf.\n\nEasy installation and configuration process.\n\n## Use cases of AgentQL MCP Server?\n\nExtracting data from e-commerce websites for price comparison.\n\nGathering information from social media platforms for analytics.\n\nAutomating data collection for research purposes.\n\n## FAQ from AgentQL MCP Server?\n\n## What is the purpose of the AgentQL MCP Server?\n\nIt is designed to facilitate data extraction from web pages using the Model Context Protocol.\n\n## Is there a cost associated with using AgentQL MCP Server?\n\nThe server is open-source and free to use, but you may need an API key for certain functionalities.\n\n## Can I integrate AgentQL MCP Server with other tools?\n\nYes, it can be integrated with various tools like Claude, Cursor, and Windsurf.",
    "Config": "{\n  \"mcpServers\": {\n    \"agentql\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"agentql-mcp\"\n      ],\n      \"env\": {\n        \"AGENTQL_API_KEY\": \"YOUR_API_KEY\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Framelink Figma MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/842883?v=4",
    "Author": "@GLips",
    "Address": "https://github.com/GLips/Figma-Context-MCP",
    "Profile": "MCP server to provide Figma layout information to AI coding agents like Cursor",
    "Overview": "## What is Figma MCP Server?\n\nFigma MCP Server is a server designed to provide Figma layout information to AI coding agents like Cursor, enhancing their ability to implement designs accurately.\n\n## How to use Figma MCP Server?\n\nTo use the Figma MCP Server, clone the repository, install dependencies, set up your Figma API access token, and connect it to Cursor. Once connected, you can paste links to Figma files in Cursor's composer to interact with the design data.\n\n## Key features of Figma MCP Server?\n\nProvides Figma design data to AI coding agents.\n\nSimplifies and translates Figma API responses for better accuracy.\n\nSupports fetching specific file and node information from Figma.\n\n## Use cases of Figma MCP Server?\n\nImplementing UI designs directly from Figma files.\n\nEnhancing AI coding agents' accuracy in design implementation.\n\nStreamlining the design-to-code workflow for developers.\n\n## FAQ from Figma MCP Server?\n\n## Can I use Figma MCP Server with any AI coding agent?\n\nThe server is specifically designed for use with Cursor.\n\n## Is there a cost associated with using Figma MCP Server?\n\nNo, it is free to use.\n\n## What kind of access do I need for the Figma API?\n\nOnly read access is required for the Figma API.",
    "Config": "{\n  \"mcpServers\": {\n    \"figma-developer-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"figma-developer-mcp\",\n        \"--stdio\"\n      ],\n      \"env\": {\n        \"FIGMA_API_KEY\": \"<your-figma-api-key>\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Firecrawl Mcp Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/135057108?v=4",
    "Author": "@mendableai",
    "Address": "https://github.com/mendableai/firecrawl-mcp-server",
    "Profile": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "Overview": "## What is Firecrawl MCP Server?\n\nFirecrawl MCP Server is an implementation of the Model Context Protocol (MCP) that enhances web scraping capabilities for various LLM clients, including Cursor and Claude.\n\n## How to use Firecrawl MCP Server?\n\nTo use the Firecrawl MCP Server, you can run it using npx or install it manually via npm. Configuration is required to set up the API key and other environment variables.\n\n## Key features of Firecrawl MCP Server?\n\n- Powerful web scraping with JavaScript rendering support\n- Automatic retries with exponential backoff\n- Efficient batch processing with rate limiting\n- Comprehensive logging and credit usage monitoring\n- Support for both cloud and self-hosted instances\n\n## Use cases of Firecrawl MCP Server?\n\n- Scraping content from websites for data analysis\n- Automating data collection for research purposes\n- Extracting structured information from web pages using LLM capabilities\n\n## FAQ from Firecrawl MCP Server?\n\n## Can I use Firecrawl MCP Server for any website?\n\nYes, as long as the website allows scraping, you can use Firecrawl MCP Server to extract data.\n\n## Is there a limit to the number of requests I can make?\n\nYes, there are rate limits in place to prevent overwhelming the server, but you can configure these settings.\n\n## How do I monitor my credit usage?\n\nThe server includes a credit usage monitoring feature that alerts you when you reach specified thresholds.",
    "Config": "{\n  \"mcpServers\": {\n    \"firecrawl-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"firecrawl-mcp\"\n      ],\n      \"env\": {\n        \"FIRECRAWL_API_KEY\": \"fc-af1b3ac1a0c2402485402fd0e34da158\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "mcp-server-flomo MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/190904236?v=4",
    "Author": "@chatmcp",
    "Address": "https://github.com/chatmcp/mcp-server-flomo",
    "Profile": "Write notes to Flomo",
    "Overview": "## What is MCP Server Flomo?\n\nMCP Server Flomo is a TypeScript-based server that allows users to write notes directly to Flomo, a note-taking application.\n\n## How to use MCP Server Flomo?\n\nTo use MCP Server Flomo, you need to install the server and configure it with your Flomo API URL. You can run the server using the command line with the appropriate configurations.\n\n## Key features of MCP Server Flomo?\n\nWrite text notes to Flomo using the write_note tool.\n\nEasy installation and configuration for different operating systems.\n\nDebugging support through MCP Inspector for easier troubleshooting.\n\n## Use cases of MCP Server Flomo?\n\nQuickly jotting down notes from various applications to Flomo.\n\nAutomating note-taking processes for developers and researchers.\n\nIntegrating with other tools to enhance productivity.\n\n## FAQ from MCP Server Flomo?\n\n## How do I find my Flomo API URL?\n\nYou can find your Flomo API URL by visiting this link.\n\n## Is MCP Server Flomo free to use?\n\nYes! MCP Server Flomo is free to use for everyone.\n\n## What programming language is MCP Server Flomo built with?\n\nMCP Server Flomo is built using TypeScript.",
    "Config": "{\n  \"mcpServers\": {\n    \"mcp-server-flomo\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@chatmcp/mcp-server-flomo\"\n      ],\n      \"env\": {\n        \"FLOMO_API_URL\": \"https://flomoapp.com/iwh/xxx/xxx/\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "GitLab",
    "ImageUrl": "https://r2.trys.ai/imgs/1yqvdha3j-1733449620948.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/blob/main/src/gitlab",
    "Profile": "GitLab API, enabling project management",
    "Overview": "## what is GitLab MCP Server?\n\nGitLab MCP Server is an API that enables project management and file operations through the GitLab platform. It facilitates various Git-related tasks using a user-friendly interface.\n\n## how to use GitLab MCP Server?\n\nTo use the GitLab MCP Server, create a Personal Access Token on GitLab, configure your Claude Desktop application to include your token and GitLab API URL, and employ the various API endpoints for specific tasks like creating projects and managing files.\n\n## key features of GitLab MCP Server?\n\nAutomatic Branch Creation: Automatically creates branches if they do not exist during file operations.\n\nComprehensive Error Handling: Provides clear error messages for common issues encountered.\n\nGit History Preservation: Maintains Git history accurately without the need for force pushing.\n\nBatch Operations Support: Allows both single-file and multi-file operations.\n\n## use cases of GitLab MCP Server?\n\nManaging GitLab project repositories programmatically.\n\nAutomating file creation and updates across multiple GitLab projects.\n\nFacilitating team collaboration through issue and merge request management.\n\n## FAQ from GitLab MCP Server?\n\n## How do I create a Personal Access Token?\n\nVisit User Settings > Access Tokens in GitLab to generate a token with the necessary scopes.\n\n## Is there a limit on the number of operations I can perform?\n\nThere may be rate limits based on your GitLab account type. Monitor your API usage to avoid exceeding limits.\n\n## Can I use GitLab MCP Server for self-hosted GitLab instances?\n\nYes! You can configure the GITLAB_API_URL environment variable to point to your self-hosted instance.",
    "Config": "{\n  \"mcpServers\": {\n    \"gitlab\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-gitlab\"\n      ],\n      \"env\": {\n        \"GITLAB_PERSONAL_ACCESS_TOKEN\": \"<YOUR_TOKEN>\",\n        \"GITLAB_API_URL\": \"https://gitlab.com/api/v4\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Puppeteer",
    "ImageUrl": "https://r2.trys.ai/imgs/ufh5xo0a-1733450066022.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/blob/main/src/puppeteer",
    "Profile": "Browser automation and web scraping",
    "Overview": "## what is Puppeteer?\n\nPuppeteer is a Model Context Protocol server that provides browser automation capabilities, allowing LLMs to interact with web pages, take screenshots, and execute JavaScript in a real browser environment.\n\n## how to use Puppeteer?\n\nTo use Puppeteer, configure your machine as specified in the provided configuration JSON and interact with the server via its various tools for navigation, screenshots, and web interactions.\n\n## key features of Puppeteer?\n\n- Browser automation for web scraping and interaction\n- Capture screenshots of web pages or individual elements\n- Console log monitoring to track browser activities\n- Execute JavaScript commands in the browser\n- Support for basic interactions like clicking and form filling\n\n## use cases of Puppeteer?\n\n- Automating data collection from websites for analysis\n- Testing web applications by simulating user interactions\n- Taking screenshots for documentation and reporting purposes\n\n## FAQ from Puppeteer?\n\n## What can Puppeteer automate?\n\nPuppeteer can automate various web interactions such as navigation, form filling, and element clicks.\n\n## Is there any cost to use Puppeteer?\n\nNo, Puppeteer is free to use under the MIT License.\n\n## How do I install Puppeteer?\n\nYou can install Puppeteer by running the specified command in the project's configuration setup.",
    "Config": "{\n  \"mcpServers\": {\n    \"puppeteer\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-puppeteer\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Sentry",
    "ImageUrl": "https://r2.trys.ai/imgs/3agh2zflb-1733450118163.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/blob/main/src/sentry",
    "Profile": "Retrieving and analyzing issues from Sentry.io",
    "Overview": "## what is Sentry?\n\nSentry is a Model Context Protocol server designed for retrieving and analyzing issues from Sentry.io. It enables developers to inspect error reports, stack traces, and debugging information efficiently.\n\n## how to use Sentry?\n\nTo use Sentry, install it via pip or the recommended uv tool, set your Sentry authentication token, and invoke it through command line or integration in development environments like Claude Desktop or Zed.\n\n## key features of Sentry?\n\nRetrieve and analyze Sentry issues by ID or URL.\n\nDetailed insights into issue including title, status, timestamps, and stack traces.\n\nSupport for debugging with the MCP inspector.\n\n## use cases of Sentry?\n\nAnalyzing application errors in real-time.\n\nRetrieving historical error reports for diagnostics.\n\nDebugging and improving application reliability by inspecting stack traces.\n\n## FAQ from Sentry?\n\n## How do I install Sentry?\n\nYou can install Sentry via pip using the command 'pip install mcp-server-sentry' or by using the uv tool.\n\n## What programming languages does Sentry support?\n\nSentry can be used with any programming language that can communicate with Sentry.io, as it primarily retrieves data from the Sentry API.\n\n## Is there support for multiple Sentry projects?\n\nYes, Sentry can handle multiple projects as long as you provide the corresponding authentication token for each project.",
    "Config": "{\n  \"mcpServers\": {\n    \"sentry\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-server-sentry\",\n        \"--auth-token\",\n        \"YOUR_SENTRY_TOKEN\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "PostgreSQL",
    "ImageUrl": "https://r2.trys.ai/imgs/34decurgn-1733450009934.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/blob/main/src/postgres",
    "Profile": "Read-only database access with schema inspection",
    "Overview": "## what is PostgreSQL?\n\nPostgreSQL is a Model Context Protocol server providing read-only access to PostgreSQL databases, allowing for schema inspection and execution of read-only queries.\n\n## how to use PostgreSQL?\n\nTo use PostgreSQL, configure it within the Claude Desktop app by adding the necessary parameters to the \"mcpServers\" section of the `claude_desktop_config.json` file. Replace the database name in the configuration with your specific database.\n\n## key features of PostgreSQL?\n\nExecute read-only SQL queries within a read-only transaction.\n\nAccess detailed schema information for each table, including column names and data types.\n\nAutomatically discovers schemas from database metadata.\n\n## use cases of PostgreSQL?\n\nInspecting database schemas before performing extensive data analysis.\n\nRunning read-only queries to generate reports without altering database states.\n\nIntegration with LLMs for database-related tasks in applications.\n\n## FAQ from PostgreSQL?\n\n## Is PostgreSQL suitable for writing data?\n\nNo! PostgreSQL provides read-only access, which means data cannot be modified through this server.\n\n## Can I use PostgreSQL with other apps?\n\nYes! While designed for Claude Desktop, PostgreSQL can be integrated into other applications that can call its endpoints.\n\n## How do I get schema information for a table?\n\nSchema information is automatically discovered and can be accessed via the provided schema URL endpoint.",
    "Config": "{\n  \"mcpServers\": {\n    \"postgres\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-postgres\",\n        \"postgresql://localhost/mydb\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "EverArt",
    "ImageUrl": "https://r2.trys.ai/imgs/2yxxlf023-1733448991293.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/everart",
    "Profile": "AI image generation using various models",
    "Overview": "## What is EverArt?\n\nEverArt is an AI image generation tool that allows users to create images using various models through an API.\n\n## How to use EverArt?\n\nTo use EverArt, install the necessary dependencies, set up your API key, and configure Claude Desktop to utilize EverArt for image generation. Use the provided commands to generate images based on prompts.\n\n## Key features of EverArt?\n\n- Generates images using multiple AI models\n- Returns generated image URLs for easy access\n- Configurable image generation parameters (prompt, model, image count)\n\n## Use cases of EverArt?\n\n- Creating unique art pieces based on descriptive prompts\n- Generating visual content for marketing and social media\n- Prototyping design concepts using AI-generated visuals\n\n## FAQ from EverArt?\n\n## What image models does EverArt support?\n\nEverArt supports multiple models such as FLUX1.1, SD3.5, and Recraft, offering various styles and qualities.\n\n## Can I customize the number of images generated?\n\nYes! You can specify the number of images you want in your requests.\n\n## Is there a limitation on the image prompt length?\n\nThe prompt can be of reasonable length, but it's best to keep it concise for optimal results.",
    "Config": "{\n  \"mcpServers\": {\n    \"everart\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-everart\"\n      ],\n      \"env\": {\n        \"EVERART_API_KEY\": \"your_key_here\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Search1API",
    "ImageUrl": "https://www.search1api.com/_next/static/media/logo.c9a81877.svg",
    "Author": "",
    "Address": "https://github.com/fatwang2/search1api-mcp",
    "Profile": "One API for Search, Crawling, and Sitemaps",
    "Overview": "## what is Search1API?\n\nSearch1API is an API that provides integrated functionalities for web search, crawling, and sitemap extraction.\n\n## how to use Search1API?\n\nTo use Search1API, first register on the website to get your API key. Then, you can utilize various tools to perform searches, crawl web pages, or extract sitemaps by sending requests with the required parameters.\n\n## key features of Search1API?\n\n- Comprehensive web search functionality\n- Ability to search news articles\n- Extracting content from specific URLs\n- Generating sitemaps from provided URLs\n- Seamless integration with Claude Desktop\n\n## use cases of Search1API?\n\nSearching for information relevant to a specific topic on the web.\n\nExtracting news articles for real-time updates.\n\nCrawling a target URL to gather content for analysis.\n\nGenerating a sitemap to understand web structure for SEO purposes.\n\n## FAQ from Search1API?\n\n## How do I obtain an API key for Search1API?\n\nYou can obtain an API key by registering on the Search1API website and selecting a pricing plan.\n\n## Is there a free trial available?\n\nYes! Search1API offers a pricing plan starting from $0.99, which allows users to explore its functionalities.\n\n## What programming languages can I use with Search1API?\n\nSearch1API can be accessed through any programming language that supports HTTP requests, making it versatile for various applications.",
    "Config": "{\n  \"mcpServers\": {\n    \"search1api\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"search1api-mcp\"\n      ],\n      \"env\": {\n        \"SEARCH1API_KEY\": \"YOUR_SEARCH1API_KEY\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Fetch",
    "ImageUrl": "https://r2.trys.ai/imgs/35rqzgsie-1733449087570.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
    "Profile": "Web content fetching and conversion for efficient LLM usage",
    "Overview": "## What is Fetch?\n\nFetch is a Model Context Protocol (MCP) server designed for web content fetching and conversion, allowing Large Language Models (LLMs) to retrieve and process content from web pages by converting HTML into markdown for easier consumption.\n\n## How to use Fetch?\n\nTo use Fetch, install it via node.js or pip, and then run the server using the command: python -m mcp_server_fetch or with uvx as specified in the documentation. You can fetch content by calling the fetch tool with a URL.\n\n## Key features of Fetch?\n\nFetches web URLs and extracts their content in markdown format.\n\nSupports configuration options such as maximum length of content and starting index for extraction.\n\nCustomizable user-agent and robots.txt compliance settings.\n\n## Use cases of Fetch?\n\nEnabling LLMs to access and process data from web pages for various applications.\n\nConverting online articles into a simplified format for analysis.\n\nAssisting in data retrieval tasks for research and data aggregation workflows.\n\n## FAQ from Fetch?\n\n## Can Fetch handle all types of web content?\n\nFetch is capable of extracting content from most web pages, although results may vary based on the site's structure and restrictions.\n\n## Is Fetch easy to integrate with other tools?\n\nYes! Fetch is designed to integrate smoothly with LLMs and can be customized to meet specific needs.\n\n## Is there any usage limit for Fetch?\n\nFetch does not impose strict usage limits, but your implementation may be subject to the guidelines of the websites you access.",
    "Config": "{\n  \"mcpServers\": {\n    \"fetch\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-server-fetch\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Mailtrap Email Sending MCP",
    "ImageUrl": "https://mailtrap.io/wp-content/uploads/2023/01/mailtrap-logo.svg",
    "Author": "@Mailtrap",
    "Address": "https://github.com/railsware/mailtrap-mcp",
    "Profile": "An MCP server that provides a tool for sending transactional emails via Mailtrap",
    "Overview": "## what is Mailtrap Email API?\n\nMailtrap Email API is a server tool designed for sending transactional emails through Mailtrap, allowing developers to integrate email functionalities into their applications seamlessly.\n\n## how to use Mailtrap Email API?\n\nTo use the Mailtrap Email API, configure your environment with the necessary API token and sender email, then utilize the provided commands to send emails through the API.\n\n## key features of Mailtrap Email API?\n\nEasy integration for sending transactional emails.\n\nSupport for various email parameters including CC and BCC.\n\nConfiguration options for different environments (Claude Desktop, Cursor, VS Code).\n\n## use cases of Mailtrap Email API?\n\nSending automated emails for user registrations.\n\nNotifying users about password resets.\n\nSending order confirmations and shipping updates.\n\n## FAQ from Mailtrap Email API?\n\n## Is Mailtrap Email API free to use?\n\nMailtrap offers a free tier, but additional features may require a paid plan.\n\n## Can I use Mailtrap Email API for bulk emails?\n\nMailtrap is primarily designed for transactional emails, not bulk email campaigns.\n\n## How do I troubleshoot email sending issues?\n\nCheck your API token and email configurations, and refer to the documentation for common troubleshooting steps.",
    "Config": "{\n  \"mcpServers\": {\n    \"mailtrap\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"mcp-mailtrap\"\n      ],\n      \"env\": {\n        \"MAILTRAP_API_TOKEN\": \"your_mailtrap_api_token\",\n        \"DEFAULT_FROM_EMAIL\": \"your_sender@example.com\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "302_browser_use_mcp",
    "ImageUrl": "https://avatars.githubusercontent.com/u/179190197?s=48&v=4",
    "Author": "@302ai",
    "Address": "https://github.com/302ai/302_browser_use_mcp",
    "Profile": "Automatically create a remote browser to complete your specified tasks, developed based on Browser Use + Sandbox.\n\n自动创建一个远程浏览器，完成你指定的任务，基于Browser Use + Sandbox开发。",
    "Overview": "## what is 302AI BrowserUse MCP?\n\n302AI BrowserUse MCP is a tool designed to automatically create a remote browser to complete specified tasks, leveraging Browser Use and Sandbox development.\n\n## how to use 302AI BrowserUse MCP?\n\nTo use 302AI BrowserUse MCP, install the necessary dependencies, build the server, and configure it with your API key. You can also set it up for use with Claude Desktop by adding the server configuration to the appropriate config file based on your operating system.\n\n## key features of 302AI BrowserUse MCP?\n\n- Automatic creation of remote browsers for task completion\n- Integration with Claude Desktop\n- Debugging tools available through MCP Inspector\n\n## use cases of 302AI BrowserUse MCP?\n\n- Automating web scraping tasks\n- Running automated tests on web applications\n- Completing repetitive online tasks without manual intervention\n\n## FAQ from 302AI BrowserUse MCP?\n\n## What is the purpose of 302AI BrowserUse MCP?\n\nIt automates the creation of remote browsers to perform specified tasks efficiently.\n\n## Is there a way to debug the server?\n\nYes! You can use the MCP Inspector for debugging, which provides a URL to access debugging tools in your browser.\n\n## How do I find my API key?\n\nYou can find your 302AI_API_KEY here.",
    "Config": "{\n  \"mcpServers\": {\n    \"302ai-browser-use-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@302ai/browser-use-mcp\"\n      ],\n      \"env\": {\n        \"302AI_API_KEY\": \"YOUR_API_KEY_HERE\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "302_sandbox_mcp",
    "ImageUrl": "https://avatars.githubusercontent.com/u/179190197?s=48&v=4",
    "Author": "@302ai",
    "Address": "https://github.com/302ai/302_sandbox_mcp",
    "Profile": "Create a remote sandbox that can execute code/run commands/upload and download files. 创建远程沙盒，可以执行代码/运行命令/上传下载文件",
    "Overview": "## what is 302AI Sandbox MCP?\n\n302AI Sandbox MCP is a server designed for development and integration with Claude Desktop, allowing users to set up and run a model context protocol (MCP) server.\n\n## how to use 302AI Sandbox MCP?\n\nTo use the 302AI Sandbox MCP, install the necessary dependencies, build the server, and configure it with your Claude Desktop application by adding the server configuration to the appropriate config file based on your operating system.\n\n## key features of 302AI Sandbox MCP?\n\n- Easy installation and setup for developers\n- Auto-rebuild feature for development\n- Integration with Claude Desktop for enhanced functionality\n- Debugging tools available through MCP Inspector\n\n## use cases of 302AI Sandbox MCP?\n\nDeveloping and testing AI models in a controlled environment.\n\nIntegrating custom AI solutions with existing applications.\n\nDebugging and optimizing AI server performance.\n\n## FAQ from 302AI Sandbox MCP?\n\n## How do I install the 302AI Sandbox MCP?\n\nYou can install it by running npm install and then build the server with npm run build.\n\n## Can I use this server on Windows?\n\nYes! The server can be configured on both MacOS and Windows.\n\n## Where can I find my API key?\n\nYou can find your 302AI_API_KEY here.",
    "Config": "{\n  \"mcpServers\": {\n    \"302ai-sandbox-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@302ai/sandbox-mcp\"\n      ],\n      \"env\": {\n        \"302AI_API_KEY\": \"YOUR_API_KEY_HERE\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "GBOX Android MCP",
    "ImageUrl": "https://gbox.ai/home/logo-with-text-dark.svg",
    "Author": "@babelcloud",
    "Address": "https://github.com/babelcloud/gbox",
    "Profile": "GBOX provides environments for AI Agents to operate computer and mobile devices.\n\nMobile Scenario: Your agents can use GBOX to develop/test android apps, or run apps on the Android to complete various tasks(mobile automation).\n\nDesktop Scenario: Your agents can use GBOX to operate desktop apps such as browser, terminal, VSCode, etc(desktop automation).\n\nMCP: You can also plug GBOX MCP to any Agent you like, such as Cursor, Claude Code. These agents will instantly get the ability to operate computer and mobile devices.\n\n",
    "Overview": "## what is Gbox?\n\nGbox is an open-source project that provides a self-hostable sandbox for MCP (Multi-Client Protocol) integration and other AI agent use cases, enabling secure local command execution for AI clients.\n\n## how to use Gbox?\n\nTo use Gbox, install it via Homebrew, set up the environment, and export the MCP configuration to your AI client like Claude Desktop or Cursor.\n\n## key features of Gbox?\n\n- Self-hostable sandbox for AI agents\n- Integration with MCP clients for local command execution\n- Support for running sandboxes in Kubernetes clusters\n- Command-line tool for managing sandbox containers\n\n## use cases of Gbox?\n\nGenerating diagrams and PDFs from AI clients.\n\nAnalyzing and comparing market data.\n\nProcessing local files and executing arbitrary tasks.\n\n## FAQ from Gbox?\n\n## What platforms does Gbox support?\n\nCurrently, Gbox supports macOS, with plans for Linux and Windows in the future.\n\n## How do I update Gbox?\n\nUse Homebrew to update Gbox and reinitialize the environment.\n\n## Can I contribute to Gbox?\n\nYes! Contributions are welcome, and you can submit a Pull Request after discussing major changes.",
    "Config": "{\n  \"mcpServers\": {\n    \"gbox-android\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@gbox.ai/mcp-android-server@latest\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Neon MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/183852044?v=4",
    "Author": "@neondatabase-labs",
    "Address": "https://github.com/neondatabase-labs/mcp-server-neon",
    "Profile": "MCP server for interacting with Neon Management API and databases",
    "Overview": "## What is Neon MCP Server?\n\nNeon MCP Server is a server designed for interacting with the Neon Management API and databases using the Model Context Protocol (MCP). It allows users to manage databases and perform operations through natural language commands.\n\n## How to use Neon MCP Server?\n\nTo use the Neon MCP Server, you need to install it via Smithery or run it locally with your Neon API key. After installation, you can issue commands through Claude Desktop to manage your databases.\n\n## Key features of Neon MCP Server?\n\nSupports various database management commands such as creating, deleting, and describing projects and branches.\n\nAllows running SQL commands and managing database migrations safely.\n\nIntegrates with Claude Desktop for natural language processing.\n\n## Use cases of Neon MCP Server?\n\nCreating and managing Postgres databases through natural language.\n\nRunning migrations on database schemas with LLM assistance.\n\nListing and describing existing projects and their data.\n\n## FAQ from Neon MCP Server?\n\n## What is the Model Context Protocol (MCP)?\n\nMCP is a standardized protocol for managing context between large language models and external systems.\n\n## Do I need an API key to use the Neon MCP Server?\n\nYes, you need a Neon API key which can be generated through the Neon console.\n\n## Is there a guide for using the Neon MCP Server?\n\nYes, there are several guides available for different clients like Claude Desktop and Cline.",
    "Config": "{\n  \"mcpServers\": {\n    \"neon\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@neondatabase/mcp-server-neon\",\n        \"start\",\n        \"{NEON_API_KEY}\"\n      ]\n    }\n  }\n}"
  },
  {
    "Title": "Google Maps",
    "ImageUrl": "https://r2.trys.ai/imgs/364m7u24w-1733449827680.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps",
    "Profile": "Location services, directions, and place details",
    "Overview": "## what is Google Maps?\n\nGoogle Maps is a location services API that provides directions, place details, and geographic data to enhance applications with mapping functionalities.\n\n## how to use Google Maps?\n\nTo use the Google Maps API, you need to obtain an API key from Google and then integrate it into your application by configuring it according to your needs. You can access various functionalities such as geocoding, searching for places, and getting directions.\n\n## key features of Google Maps?\n\n- Geolocation services for converting addresses to coordinates and vice versa\n- Search and retrieve detailed information about places\n- Calculate distances and times between locations\n- Get directions for different modes of transport\n- Elevation data for specified locations\n\n## use cases of Google Maps?\n\n- Developing navigation software for personal and commercial use\n- Real estate applications for displaying property locations\n- Transportation logistics to calculate routes and delivery times\n- Event planning tools for location-based services\n\n## FAQ from Google Maps?\n\n## How do I get a Google Maps API key?\n\nYou can get a Google Maps API key by following the instructions found on the Google Maps documentation site.\n\n## What types of services does the Google Maps API provide?\n\nThe Google Maps API offers various services including geocoding, place searching, distance matrix calculations, directions, and elevation data.\n\n## Is there a cost associated with using Google Maps?\n\nGoogle Maps has a pay-as-you-go pricing model, where costs depend on the usage and the specific services you access.",
    "Config": "{\n  \"mcpServers\": {\n    \"google-maps\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"GOOGLE_MAPS_API_KEY\",\n        \"mcp/google-maps\"\n      ],\n      \"env\": {\n        \"GOOGLE_MAPS_API_KEY\": \"<YOUR_API_KEY>\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Slack",
    "ImageUrl": "https://r2.trys.ai/imgs/3e6b71g5l-1733450233614.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/slack",
    "Profile": "Channel management and messaging capabilities",
    "Overview": "## What is Slack?\n\nSlack is a channel management and messaging solution that enables seamless interaction within workspaces, integrating with various tools for efficiency.\n\n## How to use Slack?\n\nTo use Slack, create a Slack app, configure necessary bot token scopes, and install the app to your workspace. The system supports various commands to manage channels, post messages, and retrieve user information.\n\n## Key features of Slack?\n\n- List public channels in the workspace\n- Post messages to channels\n- Reply to message threads\n- Add emoji reactions to messages\n- Retrieve channel message history\n- Get detailed user profiles\n\n## Use cases of Slack?\n\n- Team communication across multiple channels\n- Project management using message threads\n- Integrating with third-party applications and services\n\n## FAQ from Slack?\n\n## What is required to set up Slack?\n\nYou need to create a Slack app, configure scopes, and install it in your workspace.\n\n## Can Slack be integrated with other tools?\n\nYes, Slack supports integration with various third-party applications to enhance productivity.\n\n## Is there a limit on the number of channels I can manage?\n\nThe maximum number of channels returned in a single query can be set to 200, but there is no overall limit on channels within a workspace.",
    "Config": "{\n  \"mcpServers\": {\n    \"slack\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-slack\"\n      ],\n      \"env\": {\n        \"SLACK_BOT_TOKEN\": \"xoxb-your-bot-token\",\n        \"SLACK_TEAM_ID\": \"T01234567\",\n        \"SLACK_CHANNEL_IDS\": \"C01234567, C76543210\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Brave Search",
    "ImageUrl": "",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search",
    "Profile": "Web and local search using Brave's Search API",
    "Overview": "## what is Brave Search?\n\nBrave Search is an MCP server implementation that utilizes the Brave Search API to provide both web and local search capabilities.\n\n## how to use Brave Search?\n\nTo use Brave Search, sign up for a Brave Search API account to get an API key, then configure the server in your application with the provided API key and start making search queries.\n\n## key features of Brave Search?\n\nWeb Search: Execute general queries, news, and articles with pagination and freshness controls.\n\nLocal Search: Find businesses and services with detailed descriptions, automatically falling back to web search if no local results are found.\n\nFlexible Filtering: Control types of results, safety levels, and content freshness.\n\nSmart Fallbacks: Automatically fallback to web search for local queries when no results are found.\n\n## use cases of Brave Search?\n\nConducting general web searches for news articles.\n\nFinding local businesses or services quickly.\n\nCustom filtering of search results based on user-defined criteria.\n\n## FAQ from Brave Search?\n\n## How do I obtain an API Key for Brave Search?\n\nSign up for a Brave Search API account, select a plan, and generate your API key from the developer dashboard.\n\n## Is there a free tier available?\n\nYes, the free tier allows up to 2,000 queries per month.\n\n## What happens if no local search results are found?\n\nThe service automatically falls back to a web search to continue providing relevant results.",
    "Config": "{\n  \"mcpServers\": {\n    \"brave-search\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"BRAVE_API_KEY\",\n        \"mcp/brave-search\"\n      ],\n      \"env\": {\n        \"BRAVE_API_KEY\": \"YOUR_API_KEY_HERE\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "Github",
    "ImageUrl": "https://r2.trys.ai/imgs/206yyoqjn-1733449547133.png",
    "Author": "@modelcontextprotocol",
    "Address": "https://github.com/modelcontextprotocol/servers/tree/main/src/github",
    "Profile": "Repository management, file operations, and GitHub API integration",
    "Overview": "## what is GitHub MCP Server?\n\nGitHub MCP Server is a tool for managing GitHub repositories, enabling file operations, search functionality, and integration with the GitHub API for seamless collaborative software development.\n\n## how to use GitHub MCP Server?\n\nTo use this server, set up a GitHub Personal Access Token and integrate it into your application, enabling you to perform various repository management tasks through API calls.\n\n## key features of GitHub MCP Server?\n\n- Automatic branch creation for file updates and pushes\n- Comprehensive error handling with clear messages\n- Preservation of Git history during operations\n- Support for batch file operations\n- Advanced search capabilities across repositories, issues, and users\n\n## use cases of GitHub MCP Server?\n\nAutomating the creation and management of repository files.\n\nIntegrating repository management into CI/CD pipelines.\n\nEnabling search functionalities for code and issues in GitHub repositories.\n\n## FAQ from GitHub MCP Server?\n\n## How do I create a Personal Access Token?\n\nYou can create one through GitHub Settings under Developer settings > Personal access tokens.\n\n## What kind of operations can I perform with this server?\n\nYou can create/update files, search for issues/repositories, create issues/pull requests, and manage branches.\n\n## Is this server free to use?\n\nYes, the server is free to use, but you’ll need a GitHub account to access its features.",
    "Config": "{\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\",\n        \"mcp/github\"\n      ],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"<YOUR_TOKEN>\"\n      }\n    }\n  }\n}"
  },
  {
    "Title": "HeyBeauty MCP Server",
    "ImageUrl": "https://avatars.githubusercontent.com/u/190904236?v=4",
    "Author": "@chatmcp",
    "Address": "https://github.com/chatmcp/heybeauty-mcp",
    "Profile": "HeyBeauty MCP Server for Virtual TryOn",
    "Overview": "## What is HeyBeauty MCP?\n\nHeyBeauty MCP is a virtual try-on server that utilizes the HeyBeauty API to allow users to visualize clothing items on themselves through images.\n\n## How to use HeyBeauty MCP?\n\nTo use HeyBeauty MCP, you need to apply for a HeyBeauty API Key, configure the server settings in your MCP Client, and then submit try-on tasks using user and cloth images.\n\n## Key features of HeyBeauty MCP?\n\nSubmit try-on tasks with user and cloth images.\n\nQuery existing try-on tasks for status and results.\n\nAccess a catalog of clothing items via URIs with metadata.\n\n## Use cases of HeyBeauty MCP?\n\nVirtual fitting rooms for online shopping.\n\nFashion apps that allow users to try on clothes virtually.\n\nEnhancing customer experience in retail by providing virtual try-on options.\n\n## FAQ from HeyBeauty MCP?\n\n## How do I get started with HeyBeauty MCP?\n\nApply for a HeyBeauty API Key and follow the setup instructions in the documentation.\n\n## What types of images can I use?\n\nYou can use any clear images of users and clothing items for the try-on tasks.\n\n## Is there a limit to the number of try-on tasks I can submit?\n\nThe limits depend on your HeyBeauty API plan; check the API documentation for details.",
    "Config": "{\n  \"mcpServers\": {\n    \"heybeauty-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"heybeauty-mcp\"\n      ],\n      \"env\": {\n        \"HEYBEAUTY_API_KEY\": \"your-heybeauty-api-key\"\n      }\n    }\n  }\n}"
  }
]